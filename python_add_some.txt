1. unique values in each column

for col in list(df):
    print(col, ": ", df[col].unique())
   

2. #missing data
total = df_train.isnull().sum().sort_values(ascending=False)
percent = (df_train.isnull().sum()/df_train.isnull().count()).sort_values(ascending=False)
missing_data = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])
missing_data.head(20)

3. df['colour'].value_counts().plot(kind='bar')

import seaborn as sns
 sns.set(style="darkgrid")
 titanic = sns.load_dataset("titanic")
 ax = sns.countplot(x="class", data=titanic)

# import seaborn and alias it as sns
import seaborn as sns

###*                               ## fonts
# Bigger than normal fonts
sns.set(font_scale=1.5)

###*                               ## plottin
# make a barplot of your, chosen categorical, column from the dataframe
sns.countplot(catPlotDF['HUNDEFARBE']).set_title("Zurich: Dog colors")


#correlation matrix
corrmat = df_train.corr()
f, ax = plt.subplots(figsize=(12, 9))
sns.heatmap(corrmat, vmax=.8, square=True);


#saleprice correlation matrix
k = 10 #number of variables for heatmap
cols = corrmat.nlargest(k, 'SalePrice')['SalePrice'].index
cm = np.corrcoef(df_train[cols].values.T)
sns.set(font_scale=1.25)
hm = sns.heatmap(cm, cbar=True, annot=True, square=True, fmt='.2f', annot_kws={'size': 10}, yticklabels=cols.values, xticklabels=cols.values)
plt.show()

#convert categorical variable into dummy
df_train = pd.get_dummies(df_train)

